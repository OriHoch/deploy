proxy:
  restart: always
  image: 'dockercloud/haproxy:latest'
  links:
    - frontend
    - assembler
    - auth
    - rawstore
    - specstore
    - resolver
  ports:
    - '80:80'
  roles:
    - global
  tags:
    - ${PROJECT}-${STAGE}
frontend:
  autoredeploy: true
  restart: always
  image: datopian/frontend:latest
  ports:
    - "4000"
  environment:
    VIRTUAL_HOST: ${DOMAIN},https://${DOMAIN}
    SITE_URL: https://${DOMAIN}
    API_URL: https://${DOMAIN_API}
    BITSTORE_URL: https://${PKGSTORE_BUCKET}
  tags:
    - ${PROJECT}-${STAGE}
auth:
  autoredeploy: true
  restart: always
  image: datopian/auth
  ports:
    - "8000"
  target_num_containers: 1
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/auth/*
    GUNICORN_PORT: 8000
    DATABASE_URL: ${RDS_URI}
    EXTERNAL_ADDRESS: ${DOMAIN_API}
    PRIVATE_KEY:
    PUBLIC_KEY:
    GOOGLE_KEY:
    GOOGLE_SECRET:
    GITHUB_KEY:
    GITHUB_SECRET:
  tags:
    - ${PROJECT}-${STAGE}
rawstore:
  autoredeploy: true
  restart: always
  image: 'datopian/bitstore:latest'
  ports:
    - '8000'
  target_num_containers: 1
  links:
    - auth
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/rawstore/*
    AUTH_SERVER: http://auth:8000
    STORAGE_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
    STORAGE_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}
    STORAGE_BUCKET_NAME: ${RAWSTORE_BUCKET}
    STORAGE_PATH_PATTERN: '{md5_hex}'
  tags:
    - ${PROJECT}-${STAGE}
assembler:
  autoredeploy: true
  restart: always
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/pipelines/*
    SOURCESPEC_REGISTRY_DB_ENGINE:  ${RDS_URI}
    DPP_BASE_PATH: /pipelines/
    PKGSTORE_BUCKET: ${PKGSTORE_BUCKET}
    AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY}
    AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_KEY}
  image: 'datopian/assembler:latest'
  tags:
    - ${PROJECT}-${STAGE}
specstore:
  autoredeploy: true
  restart: always
  links:
    - auth
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/source/*
    AUTH_SERVER: auth:8000
    DATABASE_URL:  ${RDS_URI}
  expose:
    - '8000'
  image: 'datopian/specstore:latest'
  tags:
    - ${PROJECT}-${STAGE}
resolver:
  autoredeploy: true
  restart: always
  image: 'datopian/resolver:latest'
  ports:
    - '8000'
  links:
    - auth
  environment:
    VIRTUAL_HOST: ${DOMAIN_API}/resolver/*
    AUTH_SERVER: http://auth:8000
  tags:
    - ${PROJECT}-${STAGE}
